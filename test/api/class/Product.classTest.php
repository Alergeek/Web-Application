<?php
require_once __DIR__.'/../../../api/prepare.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-02 at 11:53:17.
 */
class ProductTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Product
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = Product::create(1234567890123, "Testproduct");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Product::create
     * @todo   Implement testCreate().
     */
    public function testCreate() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $testprod_new = Product::create(1234567890124, "TestCreateProd");

        $testprod = Product::get_by_ean($testprod_new->get_ean());

        $this->assertEquals($testprod_new->get_name(), $testprod->get_name());
        $this->assertEquals($testprod_new->get_ean(), $testprod->get_ean());


    }

    /**
     * @covers Product::get_by_ean
     * @todo   Implement testGet_by_ean().
     */
    public function testGet_by_ean() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $testprod = Product::get_by_ean(1234567890123);

        $this->assertEquals('Testproduct', $testprod->get_name());
        $this->assertEquals(1234567890123, $testprod->get_ean());
    }

    /**
     * @covers Product::get_by_name
     * @todo   Implement testGet_by_name().
     */
    public function testGet_by_name() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $testprod = Product::get_by_name("Testproduct")[0];

        $this->assertEquals('Testproduct', $testprod->get_name());
        $this->assertEquals(1234567890123, $testprod->get_ean());
    }

    /**
     * @covers Product::get_ean
     * @todo   Implement testGet_ean().
     */
    public function testGet_ean() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $this->assertEquals(1234567890123, $this->object->get_ean());

    }

    /**
     * @covers Product::get_name
     * @todo   Implement testGet_name().
     */
    public function testGet_name() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $this->assertEquals('Testproduct', $this->object->get_name());
    }

    /**
     * @covers Product::set_name
     * @todo   Implement testSet_name().
     */
    public function testSet_name() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $this->object->set_name("NewTest");

        $testprod = Product::get_by_ean($this->object->get_ean());

        $this->assertEquals('NewTest', $testprod->get_name());


        //revert changes
        $this->object->set_name("Testproduct");

    }

    /**
     * @covers Product::get_ingredients
     * @todo   Implement testGet_ingredients().
     */
    public function testGet_ingredients() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $testing_new = Ingredient::create("Testingredient");
        $this->object->add_ingredient($testing_new);

        $testing = $this->object->get_ingredients()[0];

        $this->assertEquals("Testingredient", $testing->get_name());

        //revert changes
        $this->object->rm_ingredient($testing_new);
    }

    /**
     * @covers Product::add_ingredient
     * @todo   Implement testAdd_ingredient().
     */
    public function testAdd_ingredient() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $testing_new = Ingredient::create("Testingredient");
        $this->object->add_ingredient($testing_new);

        $testing = $this->object->get_ingredients()[0];

        $this->assertEquals("Testingredient", $testing->get_name());

        //revert changes
        $this->object->rm_ingredient($testing_new);


    }

    /**
     * @covers Product::rm_ingredient
     * @todo   Implement testRm_ingredient().
     */
    public function testRm_ingredient() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');

        $testing_new = Ingredient::create("Testingredient");
        $this->object->add_ingredient($testing_new);

        $this->object->rm_ingredient($testing_new);

        $this->assertEquals(0, sizeof($this->object->get_ingredients()));


    }

}
